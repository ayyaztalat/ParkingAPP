/** * Copyright 2016 Google Inc. All Rights Reserved. * <p> * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * <p> * http://www.apache.org/licenses/LICENSE-2.0 * <p> * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.example.parkingapp.FCM;import android.app.NotificationChannel;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.media.RingtoneManager;import android.net.Uri;import android.os.Build;import android.provider.Settings;import android.support.annotation.RequiresApi;import android.support.v4.app.NotificationCompat;import android.support.v4.content.LocalBroadcastManager;import android.util.Log;import com.google.firebase.messaging.FirebaseMessagingService;import com.google.firebase.messaging.RemoteMessage;import org.json.JSONException;import org.json.JSONObject;import java.util.Random;public class MyFirebaseMessagingService extends FirebaseMessagingService {    String type;    private static final String TAG = "MyFirebaseMsgService";    String notificationType, notificationBody, channelID = "com.tecjaunt.starhub", channelName = "StarHub Tecjaunt";    int i = 0;    private NotificationManager mManager;    Intent notificationIntent;    String body;    String title;    String booking_id;    String lat;    String longs;    String arrive;    String sender_dp;    String sender_name;    String sender_message;    String sender_mail;    String jobstatus;    private String connect_id;    private String ent_dp;    private String ent_username;    private String trackingid;    private String chat_id;    private String ent_id;    private String performance;    private String confidence;    private String creativity;    private String self_discipline;    private String time_management;    private String client_username;    private String tip;    private String ent_cat;    private String job_start_ent;    /**     * Called when message is received.     *     * @param remoteMessage Object representing the message received from Firebase Cloud Messaging.     */    // [START receive_message]    @Override    public void onMessageReceived(RemoteMessage remoteMessage) {/*        Log.d(TAG, "From: " + remoteMessage.getFrom());//        Map<String, String> params = remoteMessage.getData();        if (remoteMessage.getData().size() > 0) {            Log.d(TAG, "Message data payload: " + remoteMessage.getData());          *//*  try {              sendNotification(remoteMessage.getData().toString());            }catch (Exception e){                e.printStackTrace();            }            if (true) {                Log.e(TAG, "onMessageReceived: ,no pay load" );            } else {                handleNow();            }*//*            try {                JSONObject b = new JSONObject(remoteMessage.getData());                type = b.getString("type");                if (type.equalsIgnoreCase("New Booking")) {                    String a = b.getString("message");                    booking_id=b.getString("booking_id");                    body=a;                    addNotification();                }                else if (type.equalsIgnoreCase("Booking Status")) {                    body = b.getString("message");                    addNotification();                }                else if (type.equalsIgnoreCase("Order Started")) {                    body =  b.getString("message");                  //  jobstatus=b.getString("job_status");                    ent_dp=b.getString("ent_dp");                    booking_id=b.getString("booking_id");                    ent_username=b.getString("ent_username");                    connect_id=b.getString("connect_id");                    trackingid = b.getString("trackingid");                    addNotification();                }                else if (type.equalsIgnoreCase("Entertainer Arrived")) {                    body =  b.getString("message");                   // jobstatus=b.getString("job_status");                    ent_dp=b.getString("ent_dp");                    booking_id=b.getString("booking_id");                    lat=b.getString("lat");                    longs =b.getString("long");                    arrive =b.getString("arrive");                    ent_username=b.getString("ent_username");                   // connect_id=b.getString("connect_id");                   // trackingid = b.getString("trackingid");                    boolean bb = client_map_activity.getSomeVariable();                    if (bb) {                        updateClientMap(ent_dp, booking_id, lat, longs, arrive, ent_username, trackingid);                    }else{                        addNotification();                    }                 //                }                else if (type.equalsIgnoreCase("Job Started")) {                    jobstatus=b.getString("job_start");                    ent_dp=b.getString("ent_dp");                    booking_id=b.getString("booking_id");                    body =  b.getString("message");                    ent_id =  b.getString("ent_id");                    boolean bb= client_map_activity.getSomeVariable();                    if (bb){                        updateMap(jobstatus,ent_dp,booking_id,ent_id);                    }else{                        addNotification();                    }                }                else if (type.equalsIgnoreCase("Job End Request")) {                    ent_dp=b.getString("ent_dp");                    booking_id=b.getString("booking_id");                    ent_username=b.getString("ent_username");                    ent_id =b.getString("ent_id");                    body =  b.getString("message");                    ent_cat=b.getString("cat_name");                    boolean bb=client_map_activity.getSomeVariable();                    if (bb){                        accessForcomplete(ent_dp,ent_username,booking_id,ent_id,ent_cat);                    }else{                        addNotification();                    }                }                else if (type.equalsIgnoreCase("Job Completed")) {                    ent_dp=b.getString("client_dp");                    booking_id=b.getString("booking_id");                    jobstatus=b.getString("job_complete");                    ent_username=b.getString("client_username");                    performance=b.getString("performance");                    confidence=b.getString("confidence");                    creativity=b.getString("creativity");                    self_discipline =b.getString("self_discipline");                    time_management =b.getString("time_management");                    body =  b.getString("message");                    addNotification();                }                else if (type.equalsIgnoreCase("Entertainer Tip")) {                    ent_dp=b.getString("client_dp");                    tip=b.getString("tip");                    booking_id =b.getString("booking_id");                    client_username =b.getString("client_username");                    body =  b.getString("message");                    addNotification();                }                else if (type.equalsIgnoreCase("Booking Cancelled")) {                    body =  b.getString("message");                    addNotification();                }                else if (type.equalsIgnoreCase("Job Started Accepted")) {                    ent_dp=b.getString("client_dp");                    jobstatus=b.getString("job_start_ent");                    booking_id=b.getString("booking_id");                    ent_username=b.getString("client_username");                    //=b.getString("cat_name");                    body =  b.getString("message");                    Boolean bb=entertainer_map.getSomeVariable();                    if (bb) {                        updateEntertainerMap(ent_dp, booking_id, job_start_ent, ent_username);                    }else{                        addNotification();                    }                }                else if (type.equalsIgnoreCase("chat")) {                  //  preferences.setStatus("1");                    body= b.getString("message");                    sender_dp = b.getString("sender_dp");                    sender_name = b.getString("sender_name");                    sender_message = b.getString("message");                    sender_mail = b.getString("sender");                    chat_id = b.getString("chat_id");                    boolean bb = Chat_box.getSomeVariable();                    if (bb) {                       // Constants.CHAT_ID = b.getString("chat_id");                        String chatId=b.getString("chat_id");                        updateChat(chatId);                    } else {                       // Constants.CHAT_ID = b.getString("chat_id");                        addNotification();                    }                }            } catch (Exception ex) {                Log.d("noti_parsing", ex.getLocalizedMessage());            }        }*/    }/*    private void updateEntertainerMap(String ent_dp, String booking_id, String job_start_ent, String ent_username) {        Intent intent=new Intent("com.tecjaunt.update_entertainer");        intent.putExtra("ent_dp",ent_dp);        intent.putExtra("booking_id",booking_id);        intent.putExtra("job_start_ent",job_start_ent);        intent.putExtra("ent_username",ent_username);        intent.putExtra("status",1);        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);    }    private void accessForcomplete(String ent_dp, String ent_username, String booking_id, String ent_id, String ent_cat) {        Intent intent=new Intent("com.tecjaunt.update_map");        intent.putExtra("ent_username",ent_username);        intent.putExtra("ent_dp",ent_dp);        intent.putExtra("booking_id",booking_id);        intent.putExtra("ent_id",ent_id);        intent.putExtra("status",2);        intent.putExtra("ent_cat",ent_cat);        intent.putExtra("key","jobcomplete");        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);    }    private void updateMap(String jobstatus, String ent_dp, String booking_id, String ent_id) {        Intent intent=new Intent("com.tecjaunt.update_map");        intent.putExtra("jobstatus",jobstatus);        intent.putExtra("ent_dp",ent_dp);        intent.putExtra("booking_id",booking_id);        intent.putExtra("status",1);        intent.putExtra("ent_id",ent_id);        intent.putExtra("key","jobstart");        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);    }    private void updateClientMap(String ent_dp, String booking_id, String lat, String longs, String arrive, String ent_username, String trackingid) {        Intent intent=new Intent("com.tecjaunt.update_map");        intent.putExtra("ent_user",ent_username);        intent.putExtra("ent_dp",ent_dp);        intent.putExtra("booking_id",booking_id);        intent.putExtra("lat",lat);        intent.putExtra("longs",longs);        intent.putExtra("arrive",arrive);        intent.putExtra("status",0);        intent.putExtra("trackingid",trackingid);        intent.putExtra("key","arrival");        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);    }    private void updateChat(String chatId) {        Intent intent = new Intent("com.tecjaunt.update_chat");        intent.putExtra("chat_id",chatId);        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);    }    private void addNotification() {        User_preferences pref = new User_preferences(this);        if (type.equalsIgnoreCase("New Booking")) {            notificationIntent = new Intent(this, Notification.class);            notificationIntent.putExtra("booking_id",booking_id);        } else if (type.equalsIgnoreCase("Booking Status")) {            notificationIntent = new Intent(this, Notification.class);        } else if (type.equalsIgnoreCase("Order Started")) {            notificationIntent = new Intent(this, client_map_activity.class);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("connect_id",connect_id);            notificationIntent.putExtra("tracking_id",trackingid);            notificationIntent.putExtra("cat_name",ent_cat);            notificationIntent.putExtra("ent_username",ent_username);            notificationIntent.putExtra("ent_dp",ent_dp);            notificationIntent.putExtra("key","orderstarted");         //   notificationIntent.putExtra("status",jobstatus);        } else if (type.equalsIgnoreCase("Entertainer Arrived")) {            notificationIntent = new Intent(this, client_map_activity.class);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("connect_id",connect_id);            notificationIntent.putExtra("lat",lat);            notificationIntent.putExtra("longs",longs);            notificationIntent.putExtra("arrive",arrive);            notificationIntent.putExtra("ent_username",ent_username);            notificationIntent.putExtra("ent_dp",ent_dp);            notificationIntent.putExtra("key","arrival");        } else if (type.equalsIgnoreCase("Job Started")) {            notificationIntent = new Intent(this, client_map_activity.class);          *//*  jobstatus=b.getString("job_start");            ent_dp=b.getString("ent_dp");            booking_id=b.getString("booking_id");*//*          notificationIntent.putExtra("job_start",jobstatus);          notificationIntent.putExtra("ent_dp",ent_dp);          notificationIntent.putExtra("ent_id",ent_id);          notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("status",true);            notificationIntent.putExtra("key","jobstart");        }else if (type.equalsIgnoreCase("Job started Accepted")){            *//*ent_dp=b.getString("client_dp");            booking_id=b.getString("booking_id");            job_start_ent=b.getString("job_start_ent");            ent_username=b.getString("client_username");*//*            notificationIntent.putExtra("client_dp",ent_dp);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("job_start_ent",job_start_ent);            notificationIntent.putExtra("client_username",client_username);        }        else if (type.equalsIgnoreCase("Job End Request")) {            notificationIntent = new Intent(this, client_map_activity.class);//            ent_dp=b.getString("ent_dp");//            booking_id=b.getString("booking_id");//            ent_username=b.getString("ent_username");//            ent_id =b.getString("ent_id");//            body =  b.getString("message");            notificationIntent.putExtra("ent_dp",ent_dp);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("ent_username",ent_username);            notificationIntent.putExtra("ent_id",ent_id);            notificationIntent.putExtra("ent_cat",ent_cat);            notificationIntent.putExtra("key","jobcomplete");        }  else if (type.equalsIgnoreCase("Job Completed")) {            notificationIntent = new Intent(this, Drawer.class);//            ent_dp=b.getString("client_dp");//            booking_id=b.getString("booking_id");//            jobstatus=b.getString("job_complete");//            ent_username=b.getString("client_username");////            performance=b.getString("performance");//            confidence=b.getString("confidence");//            creativity=b.getString("creativity");//            self_discipline =b.getString("self_discipline");//            time_management =b.getString("time_management");            notificationIntent.putExtra("ent_dp",ent_dp);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("jobstatus",jobstatus);            notificationIntent.putExtra("ent_username",ent_username);            notificationIntent.putExtra("performance",performance);            notificationIntent.putExtra("confidence",confidence);            notificationIntent.putExtra("creativity",creativity);            notificationIntent.putExtra("self_discipline",self_discipline);            notificationIntent.putExtra("time_management",time_management);            notificationIntent.putExtra("status",false);        }  else if (type.equalsIgnoreCase("Booking Cancelled")) {            notificationIntent = new Intent(this, Notification.class);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("client_wallet",connect_id);            notificationIntent.putExtra("status",trackingid);            notificationIntent.putExtra("ent_username",ent_username);        } else if (type.equalsIgnoreCase("Entertainer Tip")) {            notificationIntent = new Intent(this, Drawer.class);            notificationIntent.putExtra("booking_id",booking_id);            notificationIntent.putExtra("client_wallet",connect_id);            notificationIntent.putExtra("status",trackingid);            notificationIntent.putExtra("ent_username",ent_username);        }  else if (type.equalsIgnoreCase("chat")) {            notificationIntent = new Intent(this, Chat_box.class);            notificationIntent.putExtra("sender_dp",sender_dp);            notificationIntent.putExtra("name",sender_name);            notificationIntent.putExtra("message",sender_message);            notificationIntent.putExtra("sender",sender_mail);            notificationIntent.putExtra("chat_id",chat_id);        }    //    pref.setSatNot("notification");        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        PendingIntent contentIntent = PendingIntent.getActivity(this, 0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);        Random generator = new Random();        i = generator.nextInt();        if (pref.getPauseStatus()){            Log.e(TAG, "addNotification: pause " );        }      else{            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {                NotificationChannel channel = new NotificationChannel(channelID,                        channelName, NotificationManager.IMPORTANCE_HIGH);                channel.enableLights(true);                channel.enableVibration(true);                channel.setLightColor(Color.GRAY);                channel.setLockscreenVisibility(android.app.Notification.VISIBILITY_PUBLIC);                getManager().createNotificationChannel(channel);                android.app.Notification.Builder nb = getChannelNotification("Starhub",body)                        .setContentIntent(contentIntent);                getManager().notify(i, nb.build());            } else {                NotificationCompat.Builder nb = getNotification("Starhub", body)                        .setContentIntent(contentIntent);                getManager().notify(i, nb.build());            }        }    }    public NotificationCompat.Builder getNotification(String title, String body) {        return new NotificationCompat.Builder(this)                .setSmallIcon(R.drawable.app_icon)                .setContentTitle(title)                .setContentText(body)                .setDefaults(android.app.Notification.DEFAULT_SOUND)                .setSound(Settings.System.DEFAULT_NOTIFICATION_URI)                .setAutoCancel(true)                .setVibrate(new long[]{0, 1000, 200, 1000});    }    public NotificationManager getManager() {        if (mManager == null) {            mManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);        }        return mManager;    }    @RequiresApi(api = Build.VERSION_CODES.O)    public android.app.Notification.Builder getChannelNotification(String title, String body) {        return new android.app.Notification.Builder(this, channelID)                .setContentTitle(title)                .setContentText(body)                .setSmallIcon(R.drawable.app_icon)                .setAutoCancel(true);    }*/}